/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';


import {
  InputConfig,
} from './components/textfield/interfaces';


export namespace Components {

  interface ShHelloWorld {
    /**
    * The first name
    */
    'first': string;
    /**
    * The last name
    */
    'last': string;
    /**
    * The last name
    */
    'lastName': string;
    /**
    * The middle name
    */
    'middle': string;
  }
  interface ShHelloWorldAttributes extends StencilHTMLAttributes {
    /**
    * The first name
    */
    'first'?: string;
    /**
    * The last name
    */
    'last'?: string;
    /**
    * The last name
    */
    'lastName'?: string;
    /**
    * The middle name
    */
    'middle'?: string;
  }

  interface ShTextfield {
    'config': InputConfig;
    'isRequired': boolean;
    /**
    * Label of the textfield. If not supplied then it will not render any label
    */
    'label': string;
    'maxlength': number;
    /**
    * Textfield placeholder
    */
    'placeholder': string;
    'testArray': any[];
    /**
    * Input type
    */
    'type': string;
    'value': string;
  }
  interface ShTextfieldAttributes extends StencilHTMLAttributes {
    'config'?: InputConfig;
    'isRequired'?: boolean;
    /**
    * Label of the textfield. If not supplied then it will not render any label
    */
    'label'?: string;
    'maxlength'?: number;
    'onChange'?: (event: CustomEvent) => void;
    /**
    * Textfield placeholder
    */
    'placeholder'?: string;
    'testArray'?: any[];
    /**
    * Input type
    */
    'type'?: string;
    'value'?: string;
  }
}

declare global {
  interface StencilElementInterfaces {
    'ShHelloWorld': Components.ShHelloWorld;
    'ShTextfield': Components.ShTextfield;
  }

  interface StencilIntrinsicElements {
    'sh-hello-world': Components.ShHelloWorldAttributes;
    'sh-textfield': Components.ShTextfieldAttributes;
  }


  interface HTMLShHelloWorldElement extends Components.ShHelloWorld, HTMLStencilElement {}
  var HTMLShHelloWorldElement: {
    prototype: HTMLShHelloWorldElement;
    new (): HTMLShHelloWorldElement;
  };

  interface HTMLShTextfieldElement extends Components.ShTextfield, HTMLStencilElement {}
  var HTMLShTextfieldElement: {
    prototype: HTMLShTextfieldElement;
    new (): HTMLShTextfieldElement;
  };

  interface HTMLElementTagNameMap {
    'sh-hello-world': HTMLShHelloWorldElement
    'sh-textfield': HTMLShTextfieldElement
  }

  interface ElementTagNameMap {
    'sh-hello-world': HTMLShHelloWorldElement;
    'sh-textfield': HTMLShTextfieldElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
