/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';

import '@stencil/router';
import '@stencil/state-tunnel';
import {
  Link,
  MenuItems,
  ReferenceKeys,
} from './definitions';


export namespace Components {

  interface DocsCode {
    'language': string;
  }
  interface DocsCodeAttributes extends StencilHTMLAttributes {
    'language'?: string;
  }

  interface DocsComponentPreview {
    'componentHTML': string;
  }
  interface DocsComponentPreviewAttributes extends StencilHTMLAttributes {
    'componentHTML'?: string;
  }

  interface DocsHeaderLogo {}
  interface DocsHeaderLogoAttributes extends StencilHTMLAttributes {}

  interface DocsHeader {}
  interface DocsHeaderAttributes extends StencilHTMLAttributes {}

  interface DocsMenu {}
  interface DocsMenuAttributes extends StencilHTMLAttributes {}

  interface DocsNav {
    'items': MenuItems;
  }
  interface DocsNavAttributes extends StencilHTMLAttributes {
    'items'?: MenuItems;
  }

  interface DocsPage {
    'path': string;
  }
  interface DocsPageAttributes extends StencilHTMLAttributes {
    'path'?: string;
  }

  interface DocsReference {
    'data': any[];
    'keys': ReferenceKeys;
  }
  interface DocsReferenceAttributes extends StencilHTMLAttributes {
    'data'?: any[];
    'keys'?: ReferenceKeys;
  }

  interface DocsRoot {}
  interface DocsRootAttributes extends StencilHTMLAttributes {}

  interface DocsSectionNav {}
  interface DocsSectionNavAttributes extends StencilHTMLAttributes {}

  interface DocsTableOfContents {
    'basepath': string;
    'label': string;
    'links': Link[];
  }
  interface DocsTableOfContentsAttributes extends StencilHTMLAttributes {
    'basepath'?: string;
    'label'?: string;
    'links'?: Link[];
  }

  interface DocsTabs {
    'initial': string;
    'tabs': string;
  }
  interface DocsTabsAttributes extends StencilHTMLAttributes {
    'initial'?: string;
    'tabs'?: string;
  }
}

declare global {
  interface StencilElementInterfaces {
    'DocsCode': Components.DocsCode;
    'DocsComponentPreview': Components.DocsComponentPreview;
    'DocsHeaderLogo': Components.DocsHeaderLogo;
    'DocsHeader': Components.DocsHeader;
    'DocsMenu': Components.DocsMenu;
    'DocsNav': Components.DocsNav;
    'DocsPage': Components.DocsPage;
    'DocsReference': Components.DocsReference;
    'DocsRoot': Components.DocsRoot;
    'DocsSectionNav': Components.DocsSectionNav;
    'DocsTableOfContents': Components.DocsTableOfContents;
    'DocsTabs': Components.DocsTabs;
  }

  interface StencilIntrinsicElements {
    'docs-code': Components.DocsCodeAttributes;
    'docs-component-preview': Components.DocsComponentPreviewAttributes;
    'docs-header-logo': Components.DocsHeaderLogoAttributes;
    'docs-header': Components.DocsHeaderAttributes;
    'docs-menu': Components.DocsMenuAttributes;
    'docs-nav': Components.DocsNavAttributes;
    'docs-page': Components.DocsPageAttributes;
    'docs-reference': Components.DocsReferenceAttributes;
    'docs-root': Components.DocsRootAttributes;
    'docs-section-nav': Components.DocsSectionNavAttributes;
    'docs-table-of-contents': Components.DocsTableOfContentsAttributes;
    'docs-tabs': Components.DocsTabsAttributes;
  }


  interface HTMLDocsCodeElement extends Components.DocsCode, HTMLStencilElement {}
  var HTMLDocsCodeElement: {
    prototype: HTMLDocsCodeElement;
    new (): HTMLDocsCodeElement;
  };

  interface HTMLDocsComponentPreviewElement extends Components.DocsComponentPreview, HTMLStencilElement {}
  var HTMLDocsComponentPreviewElement: {
    prototype: HTMLDocsComponentPreviewElement;
    new (): HTMLDocsComponentPreviewElement;
  };

  interface HTMLDocsHeaderLogoElement extends Components.DocsHeaderLogo, HTMLStencilElement {}
  var HTMLDocsHeaderLogoElement: {
    prototype: HTMLDocsHeaderLogoElement;
    new (): HTMLDocsHeaderLogoElement;
  };

  interface HTMLDocsHeaderElement extends Components.DocsHeader, HTMLStencilElement {}
  var HTMLDocsHeaderElement: {
    prototype: HTMLDocsHeaderElement;
    new (): HTMLDocsHeaderElement;
  };

  interface HTMLDocsMenuElement extends Components.DocsMenu, HTMLStencilElement {}
  var HTMLDocsMenuElement: {
    prototype: HTMLDocsMenuElement;
    new (): HTMLDocsMenuElement;
  };

  interface HTMLDocsNavElement extends Components.DocsNav, HTMLStencilElement {}
  var HTMLDocsNavElement: {
    prototype: HTMLDocsNavElement;
    new (): HTMLDocsNavElement;
  };

  interface HTMLDocsPageElement extends Components.DocsPage, HTMLStencilElement {}
  var HTMLDocsPageElement: {
    prototype: HTMLDocsPageElement;
    new (): HTMLDocsPageElement;
  };

  interface HTMLDocsReferenceElement extends Components.DocsReference, HTMLStencilElement {}
  var HTMLDocsReferenceElement: {
    prototype: HTMLDocsReferenceElement;
    new (): HTMLDocsReferenceElement;
  };

  interface HTMLDocsRootElement extends Components.DocsRoot, HTMLStencilElement {}
  var HTMLDocsRootElement: {
    prototype: HTMLDocsRootElement;
    new (): HTMLDocsRootElement;
  };

  interface HTMLDocsSectionNavElement extends Components.DocsSectionNav, HTMLStencilElement {}
  var HTMLDocsSectionNavElement: {
    prototype: HTMLDocsSectionNavElement;
    new (): HTMLDocsSectionNavElement;
  };

  interface HTMLDocsTableOfContentsElement extends Components.DocsTableOfContents, HTMLStencilElement {}
  var HTMLDocsTableOfContentsElement: {
    prototype: HTMLDocsTableOfContentsElement;
    new (): HTMLDocsTableOfContentsElement;
  };

  interface HTMLDocsTabsElement extends Components.DocsTabs, HTMLStencilElement {}
  var HTMLDocsTabsElement: {
    prototype: HTMLDocsTabsElement;
    new (): HTMLDocsTabsElement;
  };

  interface HTMLElementTagNameMap {
    'docs-code': HTMLDocsCodeElement
    'docs-component-preview': HTMLDocsComponentPreviewElement
    'docs-header-logo': HTMLDocsHeaderLogoElement
    'docs-header': HTMLDocsHeaderElement
    'docs-menu': HTMLDocsMenuElement
    'docs-nav': HTMLDocsNavElement
    'docs-page': HTMLDocsPageElement
    'docs-reference': HTMLDocsReferenceElement
    'docs-root': HTMLDocsRootElement
    'docs-section-nav': HTMLDocsSectionNavElement
    'docs-table-of-contents': HTMLDocsTableOfContentsElement
    'docs-tabs': HTMLDocsTabsElement
  }

  interface ElementTagNameMap {
    'docs-code': HTMLDocsCodeElement;
    'docs-component-preview': HTMLDocsComponentPreviewElement;
    'docs-header-logo': HTMLDocsHeaderLogoElement;
    'docs-header': HTMLDocsHeaderElement;
    'docs-menu': HTMLDocsMenuElement;
    'docs-nav': HTMLDocsNavElement;
    'docs-page': HTMLDocsPageElement;
    'docs-reference': HTMLDocsReferenceElement;
    'docs-root': HTMLDocsRootElement;
    'docs-section-nav': HTMLDocsSectionNavElement;
    'docs-table-of-contents': HTMLDocsTableOfContentsElement;
    'docs-tabs': HTMLDocsTabsElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
